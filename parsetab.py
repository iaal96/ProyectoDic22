
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COMA COMMENT_TEXT CST_CHAR CST_FLOAT CST_INT CST_STRING DIFERENTE_A DIVIDE ENTONCES EXCLAMACION FLOAT FUNCION HASTA ID IGUAL IGUAL_A IMPRIME INT INTERROGACION LEE LEFTBRACE LEFTBRACK LEFTPAR MAS MAYOR_QUE MENOR_QUE MENOS MIENTRAS MULTIPLICA OR PARA PRINCIPAL PROGRAMA PUNTOYCOMA REGRESA RIGHTBRACE RIGHTBRACK RIGHTPAR SI SIGNO_DOLAR SINO VAR VOIDprogram : PROGRAMA ID globalTable PUNTOYCOMA declaration programFunc mainglobalTable : programFunc : function programFunc\n\t\t\t\t   | main : mainTable PRINCIPAL LEFTPAR RIGHTPAR LEFTBRACE declaration statement RIGHTBRACEmainTable : assignment : ID dimArray IGUAL hyperExpression PUNTOYCOMAdeclaration : VAR declarationPrim\n\t\t\t\t   | declarationPrim : primitive vars PUNTOYCOMA declarationPrim\n\t\t\t\t\t   | primitive : INT\n\t\t\t\t | FLOAT\n\t\t\t\t | CHAR return : REGRESA LEFTPAR hyperExpression RIGHTPAR PUNTOYCOMAif : SI LEFTPAR hyperExpression RIGHTPAR createJumpQuadIf ENTONCES LEFTBRACE statement RIGHTBRACE ifElse updateJumpQuadcreateJumpQuadIf : updateJumpQuad : ifElse : SINO createJumpQuadElse LEFTBRACE statement RIGHTBRACE\n\t\t\t  | createJumpQuadElse : comment : COMMENT_TEXTwhile : MIENTRAS pushLoopJump LEFTPAR hyperExpression RIGHTPAR beginLoopAction LEFTBRACE statement RIGHTBRACE endLoopActionpushLoopJump : beginLoopAction : endLoopAction : for : PARA forAssignment HASTA insertJumpFor hyperExpression createQuadFor LEFTBRACE statement RIGHTBRACE updateQuadForinsertJumpFor : createQuadFor : updateQuadFor : forAssignment : ID IGUAL CST_INT addTypeIntvars : ID addVarsToTable varsArray varsComaaddVarsToTable : varsComa : COMA vars\n\t\t\t\t| varsArray : LEFTBRACK CST_INT addTypeInt RIGHTBRACK setRows varsMatrix \n\t\t\t\t | setRows : varsMatrix : LEFTBRACK CST_INT addTypeInt RIGHTBRACK setCols\n\t\t\t\t  | setCols : function : functionType ID addFuncToDir LEFTPAR param RIGHTPAR setParamLength LEFTBRACE declaration statement RIGHTBRACEaddFuncToDir : functionType : FUNCION primitive\n\t\t\t\t\t| FUNCION VOID setVoidType setVoidType : param : primitive ID addFuncParams functionParam\n\t\t\t | addFuncParams : setParamLength : functionParam : COMA param\n\t\t\t\t\t | cst_prim : CST_INT addTypeInt\n\t\t\t\t| CST_FLOAT addTypeFloat\n\t\t\t\t| CST_CHAR addTypeCharaddTypeInt : addTypeFloat : addTypeChar : hyperExpression : superExpression evaluateHE opHyperExpression hyperExpressionNested\n\t\t\t\t\t   | superExpression opMatrix evaluateOpMatrix\n\t\t\t\t\t   | superExpression evaluateHEhyperExpressionNested : superExpression evaluateHE opHyperExpression hyperExpressionNested\n\t\t\t\t\t\t\t | superExpression evaluateHEevaluateOpMatrix : evaluateHE : opMatrix : EXCLAMACION addOperator\n\t\t\t\t| INTERROGACION addOperator\n\t\t\t\t| SIGNO_DOLAR addOperator opHyperExpression : AND addOperator\n\t\t\t\t\t\t | OR addOperator superExpression : exp evaluateSE opSuperExpression exp evaluateSE\n\t\t\t\t\t   | exp evaluateSE evaluateSE : opSuperExpression : MAYOR_QUE addOperator\n\t\t\t\t\t\t | MENOR_QUE addOperator\n\t\t\t\t\t\t | DIFERENTE_A addOperator \n\t\t\t\t\t\t | IGUAL_A addOperatorexp : term evaluateTerm expFunction\n\t\t   | term evaluateTerm evaluateTerm : expFunction : MAS addOperator exp\n\t\t\t\t   | MENOS addOperator exp term : factor evaluateFactor termFunction\n\t\t\t| factor evaluateFactor evaluateFactor : termFunction : MULTIPLICA addOperator term\n\t\t\t\t\t| DIVIDE addOperator term addOperator : factor : LEFTPAR addFF hyperExpression RIGHTPAR removeFF\n\t\t\t  | cst_prim \n\t\t\t  | module\n\t\t\t  | ID dimArrayaddFF : removeFF : read : LEE LEFTPAR id_list RIGHTPAR PUNTOYCOMAid_list : ID dimArray addRead id_listFunctionaddRead : id_listFunction : COMA id_list\n\t\t\t\t\t   | print : IMPRIME LEFTPAR printFunction RIGHTPAR PUNTOYCOMAprintFunction : print_param COMA printFunction2\n\t\t\t\t\t | print_param printFunction2 : printFunctionprint_param : hyperExpression addPrint\n\t\t\t\t   | CST_STRING addPrintString addPrint : addPrintString : statement : return checkVoidType\n\t\t\t\t | if statement\n\t\t\t\t | comment statement\n\t\t\t\t | read statement\n\t\t\t\t | print statement\n\t\t\t\t | assignment statement\n\t\t\t\t | module PUNTOYCOMA statement\n\t\t\t\t | for statement\n\t\t\t\t | while statement\n\t\t\t\t | checkNonVoidTypecheckVoidType : checkNonVoidType : module : ID checkFuncExists genERASize LEFTPAR moduleFunction nullParam RIGHTPAR genGosubcheckFuncExists : genERASize : nullParam : genGosub : moduleFunction : hyperExpression genParam nextParam COMA moduleFunction\n\t\t\t\t\t  | hyperExpression genParam \n\t\t\t\t\t  | genParam : nextParam : dimArray : addOperandId addTypeId LEFTBRACK readIDType hyperExpression verifyRows RIGHTBRACK dimMatrix\n\t\t\t\t| addOperandId addTypeId addOperandId : addTypeId : readIDType : verifyRows : dimMatrix : LEFTBRACK hyperExpression verifyCols RIGHTBRACK\n\t\t\t\t | checkMatAsArray verifyCols : checkMatAsArray : '
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,17,73,],[0,-1,-5,]),'ID':([2,7,10,12,13,14,15,16,21,22,27,28,32,37,39,41,46,52,53,54,55,56,58,59,63,67,69,80,83,84,85,86,93,98,117,120,122,125,143,147,148,149,156,157,158,163,164,165,166,167,169,170,172,173,175,177,180,183,191,192,194,195,196,197,198,199,200,201,204,218,223,224,225,228,233,235,238,239,240,243,244,245,248,251,],[3,-11,20,-8,24,-12,-13,-14,-44,-46,-45,-11,-10,43,24,-9,66,66,66,66,66,66,66,66,-22,91,-9,66,106,106,112,106,66,-93,106,-28,106,106,106,106,-134,106,106,-88,-88,106,-88,-88,-88,-88,-88,-88,-88,-88,-95,-100,-7,106,-69,-70,-74,-75,-76,-77,106,106,106,106,112,66,66,66,106,106,-20,106,-30,-26,-18,-27,-23,-16,66,-19,]),'PUNTOYCOMA':([3,4,23,24,29,33,38,44,49,57,72,89,96,100,101,102,103,104,105,106,107,108,109,119,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,146,159,160,161,162,168,171,187,188,189,190,193,210,211,212,213,214,215,216,217,220,227,229,232,236,237,249,],[-2,5,28,-33,-37,-35,-32,-34,-38,80,-40,-133,-36,-65,-73,-80,-85,-90,-91,-132,-56,-57,-58,-131,155,-61,-64,-88,-88,-88,-72,-79,-84,-92,-53,-54,-55,175,177,180,-60,-66,-67,-68,-78,-83,-41,-94,-65,-59,-73,-39,-89,-63,-71,-81,-82,-86,-87,-124,-120,-139,-62,-130,-137,-136,]),'VAR':([5,41,69,],[7,7,7,]),'FUNCION':([5,6,7,9,12,28,32,152,],[-9,11,-11,11,-8,-11,-10,-42,]),'PRINCIPAL':([5,6,7,8,9,12,18,19,28,32,152,],[-9,-4,-11,-6,-4,-8,25,-3,-11,-10,-42,]),'REGRESA':([7,12,28,32,41,46,52,53,54,55,56,58,59,63,69,80,93,175,177,180,218,223,224,233,238,239,240,243,244,245,248,251,],[-11,-8,-11,-10,-9,61,61,61,61,61,61,61,61,-22,-9,61,61,-95,-100,-7,61,61,61,-20,-30,-26,-18,-27,-23,-16,61,-19,]),'SI':([7,12,28,32,41,46,52,53,54,55,56,58,59,63,69,80,93,175,177,180,218,223,224,233,238,239,240,243,244,245,248,251,],[-11,-8,-11,-10,-9,62,62,62,62,62,62,62,62,-22,-9,62,62,-95,-100,-7,62,62,62,-20,-30,-26,-18,-27,-23,-16,62,-19,]),'COMMENT_TEXT':([7,12,28,32,41,46,52,53,54,55,56,58,59,63,69,80,93,175,177,180,218,223,224,233,238,239,240,243,244,245,248,251,],[-11,-8,-11,-10,-9,63,63,63,63,63,63,63,63,-22,-9,63,63,-95,-100,-7,63,63,63,-20,-30,-26,-18,-27,-23,-16,63,-19,]),'LEE':([7,12,28,32,41,46,52,53,54,55,56,58,59,63,69,80,93,175,177,180,218,223,224,233,238,239,240,243,244,245,248,251,],[-11,-8,-11,-10,-9,64,64,64,64,64,64,64,64,-22,-9,64,64,-95,-100,-7,64,64,64,-20,-30,-26,-18,-27,-23,-16,64,-19,]),'IMPRIME':([7,12,28,32,41,46,52,53,54,55,56,58,59,63,69,80,93,175,177,180,218,223,224,233,238,239,240,243,244,245,248,251,],[-11,-8,-11,-10,-9,65,65,65,65,65,65,65,65,-22,-9,65,65,-95,-100,-7,65,65,65,-20,-30,-26,-18,-27,-23,-16,65,-19,]),'PARA':([7,12,28,32,41,46,52,53,54,55,56,58,59,63,69,80,93,175,177,180,218,223,224,233,238,239,240,243,244,245,248,251,],[-11,-8,-11,-10,-9,67,67,67,67,67,67,67,67,-22,-9,67,67,-95,-100,-7,67,67,67,-20,-30,-26,-18,-27,-23,-16,67,-19,]),'MIENTRAS':([7,12,28,32,41,46,52,53,54,55,56,58,59,63,69,80,93,175,177,180,218,223,224,233,238,239,240,243,244,245,248,251,],[-11,-8,-11,-10,-9,68,68,68,68,68,68,68,68,-22,-9,68,68,-95,-100,-7,68,68,68,-20,-30,-26,-18,-27,-23,-16,68,-19,]),'RIGHTBRACE':([7,12,28,32,41,46,50,51,52,53,54,55,56,58,59,60,63,69,74,75,76,77,78,79,80,81,82,93,97,123,155,175,177,180,218,223,224,226,230,231,233,238,239,240,243,244,245,248,250,251,],[-11,-8,-11,-10,-9,-119,73,-118,-119,-119,-119,-119,-119,-119,-119,-117,-22,-9,-108,-109,-110,-111,-112,-113,-119,-115,-116,-119,-114,152,-15,-95,-100,-7,-119,-119,-119,233,238,239,-20,-30,-26,-18,-27,-23,-16,-119,251,-19,]),'INT':([7,11,28,31,71,],[14,14,14,14,14,]),'FLOAT':([7,11,28,31,71,],[15,15,15,15,15,]),'CHAR':([7,11,28,31,71,],[16,16,16,16,16,]),'VOID':([11,],[22,]),'LEFTPAR':([20,25,26,61,62,64,65,66,68,83,84,86,88,92,98,106,117,118,120,122,125,143,147,148,149,156,157,158,163,164,165,166,167,169,170,172,173,183,191,192,194,195,196,197,198,199,200,201,225,228,235,],[-43,30,31,83,84,85,86,-121,-24,98,98,98,-122,122,-93,-121,98,147,-28,98,98,98,98,-134,98,98,-88,-88,98,-88,-88,-88,-88,-88,-88,-88,-88,98,-69,-70,-74,-75,-76,-77,98,98,98,98,98,98,98,]),'LEFTBRACK':([24,29,49,66,72,89,106,112,119,229,],[-33,34,-38,-132,95,-133,-132,-132,148,235,]),'COMA':([24,29,33,43,48,49,72,89,96,100,101,102,103,104,105,106,107,108,109,112,114,115,116,119,127,128,129,130,131,132,133,134,135,136,137,138,141,144,145,159,160,161,162,168,171,176,182,187,188,189,190,193,206,210,211,212,213,214,215,216,217,220,221,227,229,232,236,237,249,],[-33,-37,39,-49,71,-38,-40,-133,-36,-65,-73,-80,-85,-90,-91,-132,-56,-57,-58,-132,143,-106,-107,-131,-61,-64,-88,-88,-88,-72,-79,-84,-92,-53,-54,-55,-97,-104,-105,-60,-66,-67,-68,-78,-83,204,-128,-41,-94,-65,-59,-73,-129,-39,-89,-63,-71,-81,-82,-86,-87,-124,228,-120,-139,-62,-130,-137,-136,]),'RIGHTPAR':([30,31,36,43,48,70,71,89,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,127,128,129,130,131,132,133,134,135,136,137,138,141,144,145,147,151,154,159,160,161,162,168,171,176,178,179,181,182,188,189,190,193,203,205,206,211,212,213,214,215,216,217,219,220,227,228,229,232,234,236,237,249,],[35,-48,42,-49,-52,-47,-48,-133,-51,126,-65,-73,-80,-85,-90,-91,-132,-56,-57,-58,139,140,-132,142,-102,-106,-107,-131,-61,-64,-88,-88,-88,-72,-79,-84,-92,-53,-54,-55,-97,-104,-105,-127,186,188,-60,-66,-67,-68,-78,-83,-99,-101,-103,-123,-128,-94,-65,-59,-73,-96,220,-126,-89,-63,-71,-81,-82,-86,-87,-98,-124,-120,-127,-139,-62,-125,-130,-137,-136,]),'CST_INT':([34,83,84,86,95,98,117,120,121,122,125,143,147,148,149,156,157,158,163,164,165,166,167,169,170,172,173,183,191,192,194,195,196,197,198,199,200,201,225,228,235,],[40,107,107,107,124,-93,107,-28,150,107,107,107,107,-134,107,107,-88,-88,107,-88,-88,-88,-88,-88,-88,-88,-88,107,-69,-70,-74,-75,-76,-77,107,107,107,107,107,107,107,]),'LEFTBRACE':([35,42,47,89,100,101,102,103,104,105,106,107,108,109,119,127,128,129,130,131,132,133,134,135,136,137,138,159,160,161,162,168,171,184,186,188,189,190,193,202,208,209,211,212,213,214,215,216,217,220,227,229,232,236,237,241,246,249,],[41,-50,69,-133,-65,-73,-80,-85,-90,-91,-132,-56,-57,-58,-131,-61,-64,-88,-88,-88,-72,-79,-84,-92,-53,-54,-55,-60,-66,-67,-68,-78,-83,-29,-25,-94,-65,-59,-73,218,223,224,-89,-63,-71,-81,-82,-86,-87,-124,-120,-139,-62,-130,-137,-21,248,-136,]),'RIGHTBRACK':([40,45,89,100,101,102,103,104,105,106,107,108,109,119,124,127,128,129,130,131,132,133,134,135,136,137,138,153,159,160,161,162,168,171,188,189,190,193,207,211,212,213,214,215,216,217,220,222,227,229,232,236,237,242,247,249,],[-56,49,-133,-65,-73,-80,-85,-90,-91,-132,-56,-57,-58,-131,-56,-61,-64,-88,-88,-88,-72,-79,-84,-92,-53,-54,-55,187,-60,-66,-67,-68,-78,-83,-94,-65,-59,-73,-135,-89,-63,-71,-81,-82,-86,-87,-124,229,-120,-139,-62,-130,-137,-138,249,-136,]),'IGUAL':([66,87,89,91,119,229,236,237,249,],[-132,117,-133,121,-131,-139,-130,-137,-136,]),'CST_FLOAT':([83,84,86,98,117,120,122,125,143,147,148,149,156,157,158,163,164,165,166,167,169,170,172,173,183,191,192,194,195,196,197,198,199,200,201,225,228,235,],[108,108,108,-93,108,-28,108,108,108,108,-134,108,108,-88,-88,108,-88,-88,-88,-88,-88,-88,-88,-88,108,-69,-70,-74,-75,-76,-77,108,108,108,108,108,108,108,]),'CST_CHAR':([83,84,86,98,117,120,122,125,143,147,148,149,156,157,158,163,164,165,166,167,169,170,172,173,183,191,192,194,195,196,197,198,199,200,201,225,228,235,],[109,109,109,-93,109,-28,109,109,109,109,-134,109,109,-88,-88,109,-88,-88,-88,-88,-88,-88,-88,-88,109,-69,-70,-74,-75,-76,-77,109,109,109,109,109,109,109,]),'CST_STRING':([86,143,],[116,116,]),'MULTIPLICA':([89,103,104,105,106,107,108,109,119,134,135,136,137,138,188,211,220,227,229,236,237,249,],[-133,-85,-90,-91,-132,-56,-57,-58,-131,172,-92,-53,-54,-55,-94,-89,-124,-120,-139,-130,-137,-136,]),'DIVIDE':([89,103,104,105,106,107,108,109,119,134,135,136,137,138,188,211,220,227,229,236,237,249,],[-133,-85,-90,-91,-132,-56,-57,-58,-131,173,-92,-53,-54,-55,-94,-89,-124,-120,-139,-130,-137,-136,]),'MAS':([89,102,103,104,105,106,107,108,109,119,133,134,135,136,137,138,171,188,211,216,217,220,227,229,236,237,249,],[-133,-80,-85,-90,-91,-132,-56,-57,-58,-131,169,-84,-92,-53,-54,-55,-83,-94,-89,-86,-87,-124,-120,-139,-130,-137,-136,]),'MENOS':([89,102,103,104,105,106,107,108,109,119,133,134,135,136,137,138,171,188,211,216,217,220,227,229,236,237,249,],[-133,-80,-85,-90,-91,-132,-56,-57,-58,-131,170,-84,-92,-53,-54,-55,-83,-94,-89,-86,-87,-124,-120,-139,-130,-137,-136,]),'MAYOR_QUE':([89,101,102,103,104,105,106,107,108,109,119,132,133,134,135,136,137,138,168,171,188,211,214,215,216,217,220,227,229,236,237,249,],[-133,-73,-80,-85,-90,-91,-132,-56,-57,-58,-131,164,-79,-84,-92,-53,-54,-55,-78,-83,-94,-89,-81,-82,-86,-87,-124,-120,-139,-130,-137,-136,]),'MENOR_QUE':([89,101,102,103,104,105,106,107,108,109,119,132,133,134,135,136,137,138,168,171,188,211,214,215,216,217,220,227,229,236,237,249,],[-133,-73,-80,-85,-90,-91,-132,-56,-57,-58,-131,165,-79,-84,-92,-53,-54,-55,-78,-83,-94,-89,-81,-82,-86,-87,-124,-120,-139,-130,-137,-136,]),'DIFERENTE_A':([89,101,102,103,104,105,106,107,108,109,119,132,133,134,135,136,137,138,168,171,188,211,214,215,216,217,220,227,229,236,237,249,],[-133,-73,-80,-85,-90,-91,-132,-56,-57,-58,-131,166,-79,-84,-92,-53,-54,-55,-78,-83,-94,-89,-81,-82,-86,-87,-124,-120,-139,-130,-137,-136,]),'IGUAL_A':([89,101,102,103,104,105,106,107,108,109,119,132,133,134,135,136,137,138,168,171,188,211,214,215,216,217,220,227,229,236,237,249,],[-133,-73,-80,-85,-90,-91,-132,-56,-57,-58,-131,167,-79,-84,-92,-53,-54,-55,-78,-83,-94,-89,-81,-82,-86,-87,-124,-120,-139,-130,-137,-136,]),'EXCLAMACION':([89,100,101,102,103,104,105,106,107,108,109,119,132,133,134,135,136,137,138,168,171,188,193,211,213,214,215,216,217,220,227,229,236,237,249,],[-133,129,-73,-80,-85,-90,-91,-132,-56,-57,-58,-131,-72,-79,-84,-92,-53,-54,-55,-78,-83,-94,-73,-89,-71,-81,-82,-86,-87,-124,-120,-139,-130,-137,-136,]),'INTERROGACION':([89,100,101,102,103,104,105,106,107,108,109,119,132,133,134,135,136,137,138,168,171,188,193,211,213,214,215,216,217,220,227,229,236,237,249,],[-133,130,-73,-80,-85,-90,-91,-132,-56,-57,-58,-131,-72,-79,-84,-92,-53,-54,-55,-78,-83,-94,-73,-89,-71,-81,-82,-86,-87,-124,-120,-139,-130,-137,-136,]),'SIGNO_DOLAR':([89,100,101,102,103,104,105,106,107,108,109,119,132,133,134,135,136,137,138,168,171,188,193,211,213,214,215,216,217,220,227,229,236,237,249,],[-133,131,-73,-80,-85,-90,-91,-132,-56,-57,-58,-131,-72,-79,-84,-92,-53,-54,-55,-78,-83,-94,-73,-89,-71,-81,-82,-86,-87,-124,-120,-139,-130,-137,-136,]),'AND':([89,100,101,102,103,104,105,106,107,108,109,119,127,132,133,134,135,136,137,138,168,171,188,189,193,211,212,213,214,215,216,217,220,227,229,236,237,249,],[-133,-65,-73,-80,-85,-90,-91,-132,-56,-57,-58,-131,157,-72,-79,-84,-92,-53,-54,-55,-78,-83,-94,-65,-73,-89,157,-71,-81,-82,-86,-87,-124,-120,-139,-130,-137,-136,]),'OR':([89,100,101,102,103,104,105,106,107,108,109,119,127,132,133,134,135,136,137,138,168,171,188,189,193,211,212,213,214,215,216,217,220,227,229,236,237,249,],[-133,-65,-73,-80,-85,-90,-91,-132,-56,-57,-58,-131,158,-72,-79,-84,-92,-53,-54,-55,-78,-83,-94,-65,-73,-89,158,-71,-81,-82,-86,-87,-124,-120,-139,-130,-137,-136,]),'HASTA':([90,150,185,],[120,-56,-31,]),'ENTONCES':([139,174,],[-17,202,]),'SINO':([233,],[241,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'globalTable':([3,],[4,]),'declaration':([5,41,69,],[6,46,93,]),'programFunc':([6,9,],[8,19,]),'function':([6,9,],[9,9,]),'functionType':([6,9,],[10,10,]),'declarationPrim':([7,28,],[12,32,]),'primitive':([7,11,28,31,71,],[13,21,13,37,37,]),'main':([8,],[17,]),'mainTable':([8,],[18,]),'vars':([13,39,],[23,44,]),'addFuncToDir':([20,],[26,]),'setVoidType':([22,],[27,]),'addVarsToTable':([24,],[29,]),'varsArray':([29,],[33,]),'param':([31,71,],[36,94,]),'varsComa':([33,],[38,]),'addTypeInt':([40,107,124,150,],[45,136,153,185,]),'setParamLength':([42,],[47,]),'addFuncParams':([43,],[48,]),'statement':([46,52,53,54,55,56,58,59,80,93,218,223,224,248,],[50,75,76,77,78,79,81,82,97,123,226,230,231,250,]),'return':([46,52,53,54,55,56,58,59,80,93,218,223,224,248,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'if':([46,52,53,54,55,56,58,59,80,93,218,223,224,248,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'comment':([46,52,53,54,55,56,58,59,80,93,218,223,224,248,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'read':([46,52,53,54,55,56,58,59,80,93,218,223,224,248,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'print':([46,52,53,54,55,56,58,59,80,93,218,223,224,248,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'assignment':([46,52,53,54,55,56,58,59,80,93,218,223,224,248,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'module':([46,52,53,54,55,56,58,59,80,83,84,86,93,117,122,125,143,147,149,156,163,183,198,199,200,201,218,223,224,225,228,235,248,],[57,57,57,57,57,57,57,57,57,105,105,105,57,105,105,105,105,105,105,105,105,105,105,105,105,105,57,57,57,105,105,105,57,]),'for':([46,52,53,54,55,56,58,59,80,93,218,223,224,248,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'while':([46,52,53,54,55,56,58,59,80,93,218,223,224,248,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'checkNonVoidType':([46,52,53,54,55,56,58,59,80,93,218,223,224,248,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'functionParam':([48,],[70,]),'setRows':([49,],[72,]),'checkVoidType':([51,],[74,]),'dimArray':([66,106,112,],[87,135,141,]),'checkFuncExists':([66,106,],[88,88,]),'addOperandId':([66,106,112,],[89,89,89,]),'forAssignment':([67,],[90,]),'pushLoopJump':([68,],[92,]),'varsMatrix':([72,],[96,]),'hyperExpression':([83,84,86,117,122,125,143,147,149,183,228,235,],[99,110,115,146,151,154,115,182,184,207,182,242,]),'superExpression':([83,84,86,117,122,125,143,147,149,156,183,225,228,235,],[100,100,100,100,100,100,100,100,100,189,100,189,100,100,]),'exp':([83,84,86,117,122,125,143,147,149,156,163,183,198,199,225,228,235,],[101,101,101,101,101,101,101,101,101,101,193,101,214,215,101,101,101,]),'term':([83,84,86,117,122,125,143,147,149,156,163,183,198,199,200,201,225,228,235,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,216,217,102,102,102,]),'factor':([83,84,86,117,122,125,143,147,149,156,163,183,198,199,200,201,225,228,235,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'cst_prim':([83,84,86,117,122,125,143,147,149,156,163,183,198,199,200,201,225,228,235,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'id_list':([85,204,],[111,219,]),'printFunction':([86,143,],[113,179,]),'print_param':([86,143,],[114,114,]),'genERASize':([88,],[118,]),'addTypeId':([89,],[119,]),'addFF':([98,],[125,]),'evaluateHE':([100,189,],[127,212,]),'opMatrix':([100,],[128,]),'evaluateSE':([101,193,],[132,213,]),'evaluateTerm':([102,],[133,]),'evaluateFactor':([103,],[134,]),'addTypeFloat':([108,],[137,]),'addTypeChar':([109,],[138,]),'addPrint':([115,],[144,]),'addPrintString':([116,],[145,]),'insertJumpFor':([120,],[149,]),'opHyperExpression':([127,212,],[156,225,]),'evaluateOpMatrix':([128,],[159,]),'addOperator':([129,130,131,157,158,164,165,166,167,169,170,172,173,],[160,161,162,191,192,194,195,196,197,198,199,200,201,]),'opSuperExpression':([132,],[163,]),'expFunction':([133,],[168,]),'termFunction':([134,],[171,]),'createJumpQuadIf':([139,],[174,]),'addRead':([141,],[176,]),'printFunction2':([143,],[178,]),'moduleFunction':([147,228,],[181,234,]),'readIDType':([148,],[183,]),'hyperExpressionNested':([156,225,],[190,232,]),'id_listFunction':([176,],[203,]),'nullParam':([181,],[205,]),'genParam':([182,],[206,]),'createQuadFor':([184,],[208,]),'beginLoopAction':([186,],[209,]),'setCols':([187,],[210,]),'removeFF':([188,],[211,]),'nextParam':([206,],[221,]),'verifyRows':([207,],[222,]),'genGosub':([220,],[227,]),'dimMatrix':([229,],[236,]),'checkMatAsArray':([229,],[237,]),'ifElse':([233,],[240,]),'updateQuadFor':([238,],[243,]),'endLoopAction':([239,],[244,]),'updateJumpQuad':([240,],[245,]),'createJumpQuadElse':([241,],[246,]),'verifyCols':([242,],[247,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAMA ID globalTable PUNTOYCOMA declaration programFunc main','program',7,'p_program','parser.py',13),
  ('globalTable -> <empty>','globalTable',0,'p_globalTable','parser.py',18),
  ('programFunc -> function programFunc','programFunc',2,'p_programFunc','parser.py',21),
  ('programFunc -> <empty>','programFunc',0,'p_programFunc','parser.py',22),
  ('main -> mainTable PRINCIPAL LEFTPAR RIGHTPAR LEFTBRACE declaration statement RIGHTBRACE','main',8,'p_main','parser.py',25),
  ('mainTable -> <empty>','mainTable',0,'p_mainTable','parser.py',29),
  ('assignment -> ID dimArray IGUAL hyperExpression PUNTOYCOMA','assignment',5,'p_assignment','parser.py',32),
  ('declaration -> VAR declarationPrim','declaration',2,'p_declaration','parser.py',35),
  ('declaration -> <empty>','declaration',0,'p_declaration','parser.py',36),
  ('declarationPrim -> primitive vars PUNTOYCOMA declarationPrim','declarationPrim',4,'p_declarationPrim','parser.py',39),
  ('declarationPrim -> <empty>','declarationPrim',0,'p_declarationPrim','parser.py',40),
  ('primitive -> INT','primitive',1,'p_primitive','parser.py',43),
  ('primitive -> FLOAT','primitive',1,'p_primitive','parser.py',44),
  ('primitive -> CHAR','primitive',1,'p_primitive','parser.py',45),
  ('return -> REGRESA LEFTPAR hyperExpression RIGHTPAR PUNTOYCOMA','return',5,'p_return','parser.py',48),
  ('if -> SI LEFTPAR hyperExpression RIGHTPAR createJumpQuadIf ENTONCES LEFTBRACE statement RIGHTBRACE ifElse updateJumpQuad','if',11,'p_if','parser.py',51),
  ('createJumpQuadIf -> <empty>','createJumpQuadIf',0,'p_createJumpQuadIf','parser.py',54),
  ('updateJumpQuad -> <empty>','updateJumpQuad',0,'p_updateJumpQuad','parser.py',57),
  ('ifElse -> SINO createJumpQuadElse LEFTBRACE statement RIGHTBRACE','ifElse',5,'p_ifElse','parser.py',60),
  ('ifElse -> <empty>','ifElse',0,'p_ifElse','parser.py',61),
  ('createJumpQuadElse -> <empty>','createJumpQuadElse',0,'p_createJumpQuadElse','parser.py',64),
  ('comment -> COMMENT_TEXT','comment',1,'p_comment','parser.py',67),
  ('while -> MIENTRAS pushLoopJump LEFTPAR hyperExpression RIGHTPAR beginLoopAction LEFTBRACE statement RIGHTBRACE endLoopAction','while',10,'p_while','parser.py',70),
  ('pushLoopJump -> <empty>','pushLoopJump',0,'p_pushLoopJump','parser.py',73),
  ('beginLoopAction -> <empty>','beginLoopAction',0,'p_beginLoopAction','parser.py',76),
  ('endLoopAction -> <empty>','endLoopAction',0,'p_endLoopAction','parser.py',79),
  ('for -> PARA forAssignment HASTA insertJumpFor hyperExpression createQuadFor LEFTBRACE statement RIGHTBRACE updateQuadFor','for',10,'p_for','parser.py',82),
  ('insertJumpFor -> <empty>','insertJumpFor',0,'p_insertJumpFor','parser.py',85),
  ('createQuadFor -> <empty>','createQuadFor',0,'p_createQuadFor','parser.py',88),
  ('updateQuadFor -> <empty>','updateQuadFor',0,'p_updateQuadFor','parser.py',91),
  ('forAssignment -> ID IGUAL CST_INT addTypeInt','forAssignment',4,'p_forAssignment','parser.py',94),
  ('vars -> ID addVarsToTable varsArray varsComa','vars',4,'p_vars','parser.py',97),
  ('addVarsToTable -> <empty>','addVarsToTable',0,'p_addVarsToTable','parser.py',100),
  ('varsComa -> COMA vars','varsComa',2,'p_varsComa','parser.py',103),
  ('varsComa -> <empty>','varsComa',0,'p_varsComa','parser.py',104),
  ('varsArray -> LEFTBRACK CST_INT addTypeInt RIGHTBRACK setRows varsMatrix','varsArray',6,'p_varsArray','parser.py',107),
  ('varsArray -> <empty>','varsArray',0,'p_varsArray','parser.py',108),
  ('setRows -> <empty>','setRows',0,'p_setRows','parser.py',111),
  ('varsMatrix -> LEFTBRACK CST_INT addTypeInt RIGHTBRACK setCols','varsMatrix',5,'p_varsMatrix','parser.py',114),
  ('varsMatrix -> <empty>','varsMatrix',0,'p_varsMatrix','parser.py',115),
  ('setCols -> <empty>','setCols',0,'p_setCols','parser.py',118),
  ('function -> functionType ID addFuncToDir LEFTPAR param RIGHTPAR setParamLength LEFTBRACE declaration statement RIGHTBRACE','function',11,'p_function','parser.py',121),
  ('addFuncToDir -> <empty>','addFuncToDir',0,'p_addFuncToDir','parser.py',124),
  ('functionType -> FUNCION primitive','functionType',2,'p_functionType','parser.py',127),
  ('functionType -> FUNCION VOID setVoidType','functionType',3,'p_functionType','parser.py',128),
  ('setVoidType -> <empty>','setVoidType',0,'p_setVoidType','parser.py',131),
  ('param -> primitive ID addFuncParams functionParam','param',4,'p_param','parser.py',134),
  ('param -> <empty>','param',0,'p_param','parser.py',135),
  ('addFuncParams -> <empty>','addFuncParams',0,'p_addFuncParams','parser.py',138),
  ('setParamLength -> <empty>','setParamLength',0,'p_setParamLength','parser.py',141),
  ('functionParam -> COMA param','functionParam',2,'p_functionParam','parser.py',144),
  ('functionParam -> <empty>','functionParam',0,'p_functionParam','parser.py',145),
  ('cst_prim -> CST_INT addTypeInt','cst_prim',2,'p_cst_prim','parser.py',148),
  ('cst_prim -> CST_FLOAT addTypeFloat','cst_prim',2,'p_cst_prim','parser.py',149),
  ('cst_prim -> CST_CHAR addTypeChar','cst_prim',2,'p_cst_prim','parser.py',150),
  ('addTypeInt -> <empty>','addTypeInt',0,'p_addTypeInt','parser.py',153),
  ('addTypeFloat -> <empty>','addTypeFloat',0,'p_addTypeFloat','parser.py',156),
  ('addTypeChar -> <empty>','addTypeChar',0,'p_addTypeChar','parser.py',159),
  ('hyperExpression -> superExpression evaluateHE opHyperExpression hyperExpressionNested','hyperExpression',4,'p_hyperExpression','parser.py',162),
  ('hyperExpression -> superExpression opMatrix evaluateOpMatrix','hyperExpression',3,'p_hyperExpression','parser.py',163),
  ('hyperExpression -> superExpression evaluateHE','hyperExpression',2,'p_hyperExpression','parser.py',164),
  ('hyperExpressionNested -> superExpression evaluateHE opHyperExpression hyperExpressionNested','hyperExpressionNested',4,'p_hyperExpressionNested','parser.py',167),
  ('hyperExpressionNested -> superExpression evaluateHE','hyperExpressionNested',2,'p_hyperExpressionNested','parser.py',168),
  ('evaluateOpMatrix -> <empty>','evaluateOpMatrix',0,'p_evaluateOpMatrix','parser.py',171),
  ('evaluateHE -> <empty>','evaluateHE',0,'p_evaluateHE','parser.py',174),
  ('opMatrix -> EXCLAMACION addOperator','opMatrix',2,'p_opMatrix','parser.py',177),
  ('opMatrix -> INTERROGACION addOperator','opMatrix',2,'p_opMatrix','parser.py',178),
  ('opMatrix -> SIGNO_DOLAR addOperator','opMatrix',2,'p_opMatrix','parser.py',179),
  ('opHyperExpression -> AND addOperator','opHyperExpression',2,'p_opHyperExpression','parser.py',182),
  ('opHyperExpression -> OR addOperator','opHyperExpression',2,'p_opHyperExpression','parser.py',183),
  ('superExpression -> exp evaluateSE opSuperExpression exp evaluateSE','superExpression',5,'p_superExpression','parser.py',186),
  ('superExpression -> exp evaluateSE','superExpression',2,'p_superExpression','parser.py',187),
  ('evaluateSE -> <empty>','evaluateSE',0,'p_evaluateSE','parser.py',190),
  ('opSuperExpression -> MAYOR_QUE addOperator','opSuperExpression',2,'p_opSuperExpression','parser.py',193),
  ('opSuperExpression -> MENOR_QUE addOperator','opSuperExpression',2,'p_opSuperExpression','parser.py',194),
  ('opSuperExpression -> DIFERENTE_A addOperator','opSuperExpression',2,'p_opSuperExpression','parser.py',195),
  ('opSuperExpression -> IGUAL_A addOperator','opSuperExpression',2,'p_opSuperExpression','parser.py',196),
  ('exp -> term evaluateTerm expFunction','exp',3,'p_exp','parser.py',199),
  ('exp -> term evaluateTerm','exp',2,'p_exp','parser.py',200),
  ('evaluateTerm -> <empty>','evaluateTerm',0,'p_evaluateTerm','parser.py',203),
  ('expFunction -> MAS addOperator exp','expFunction',3,'p_expFunction','parser.py',206),
  ('expFunction -> MENOS addOperator exp','expFunction',3,'p_expFunction','parser.py',207),
  ('term -> factor evaluateFactor termFunction','term',3,'p_term','parser.py',210),
  ('term -> factor evaluateFactor','term',2,'p_term','parser.py',211),
  ('evaluateFactor -> <empty>','evaluateFactor',0,'p_evaluateFactor','parser.py',214),
  ('termFunction -> MULTIPLICA addOperator term','termFunction',3,'p_termFunction','parser.py',217),
  ('termFunction -> DIVIDE addOperator term','termFunction',3,'p_termFunction','parser.py',218),
  ('addOperator -> <empty>','addOperator',0,'p_addOperator','parser.py',221),
  ('factor -> LEFTPAR addFF hyperExpression RIGHTPAR removeFF','factor',5,'p_factor','parser.py',224),
  ('factor -> cst_prim','factor',1,'p_factor','parser.py',225),
  ('factor -> module','factor',1,'p_factor','parser.py',226),
  ('factor -> ID dimArray','factor',2,'p_factor','parser.py',227),
  ('addFF -> <empty>','addFF',0,'p_addFF','parser.py',230),
  ('removeFF -> <empty>','removeFF',0,'p_removeFF','parser.py',233),
  ('read -> LEE LEFTPAR id_list RIGHTPAR PUNTOYCOMA','read',5,'p_read','parser.py',236),
  ('id_list -> ID dimArray addRead id_listFunction','id_list',4,'p_id_list','parser.py',239),
  ('addRead -> <empty>','addRead',0,'p_addRead','parser.py',242),
  ('id_listFunction -> COMA id_list','id_listFunction',2,'p_id_listFunction','parser.py',245),
  ('id_listFunction -> <empty>','id_listFunction',0,'p_id_listFunction','parser.py',246),
  ('print -> IMPRIME LEFTPAR printFunction RIGHTPAR PUNTOYCOMA','print',5,'p_print','parser.py',249),
  ('printFunction -> print_param COMA printFunction2','printFunction',3,'p_printFunction','parser.py',252),
  ('printFunction -> print_param','printFunction',1,'p_printFunction','parser.py',253),
  ('printFunction2 -> printFunction','printFunction2',1,'p_printFunction2','parser.py',256),
  ('print_param -> hyperExpression addPrint','print_param',2,'p_print_param','parser.py',259),
  ('print_param -> CST_STRING addPrintString','print_param',2,'p_print_param','parser.py',260),
  ('addPrint -> <empty>','addPrint',0,'p_addPrint','parser.py',263),
  ('addPrintString -> <empty>','addPrintString',0,'p_addPrintString','parser.py',266),
  ('statement -> return checkVoidType','statement',2,'p_statement','parser.py',269),
  ('statement -> if statement','statement',2,'p_statement','parser.py',270),
  ('statement -> comment statement','statement',2,'p_statement','parser.py',271),
  ('statement -> read statement','statement',2,'p_statement','parser.py',272),
  ('statement -> print statement','statement',2,'p_statement','parser.py',273),
  ('statement -> assignment statement','statement',2,'p_statement','parser.py',274),
  ('statement -> module PUNTOYCOMA statement','statement',3,'p_statement','parser.py',275),
  ('statement -> for statement','statement',2,'p_statement','parser.py',276),
  ('statement -> while statement','statement',2,'p_statement','parser.py',277),
  ('statement -> checkNonVoidType','statement',1,'p_statement','parser.py',278),
  ('checkVoidType -> <empty>','checkVoidType',0,'p_checkVoidType','parser.py',281),
  ('checkNonVoidType -> <empty>','checkNonVoidType',0,'p_checkNonVoidType','parser.py',284),
  ('module -> ID checkFuncExists genERASize LEFTPAR moduleFunction nullParam RIGHTPAR genGosub','module',8,'p_module','parser.py',287),
  ('checkFuncExists -> <empty>','checkFuncExists',0,'p_checkFuncExists','parser.py',290),
  ('genERASize -> <empty>','genERASize',0,'p_genERASize','parser.py',293),
  ('nullParam -> <empty>','nullParam',0,'p_nullParam','parser.py',296),
  ('genGosub -> <empty>','genGosub',0,'p_genGosub','parser.py',299),
  ('moduleFunction -> hyperExpression genParam nextParam COMA moduleFunction','moduleFunction',5,'p_moduleFunction','parser.py',302),
  ('moduleFunction -> hyperExpression genParam','moduleFunction',2,'p_moduleFunction','parser.py',303),
  ('moduleFunction -> <empty>','moduleFunction',0,'p_moduleFunction','parser.py',304),
  ('genParam -> <empty>','genParam',0,'p_genParam','parser.py',307),
  ('nextParam -> <empty>','nextParam',0,'p_nextParam','parser.py',310),
  ('dimArray -> addOperandId addTypeId LEFTBRACK readIDType hyperExpression verifyRows RIGHTBRACK dimMatrix','dimArray',8,'p_dimArray','parser.py',313),
  ('dimArray -> addOperandId addTypeId','dimArray',2,'p_dimArray','parser.py',314),
  ('addOperandId -> <empty>','addOperandId',0,'p_addOperandId','parser.py',317),
  ('addTypeId -> <empty>','addTypeId',0,'p_addTypeId','parser.py',320),
  ('readIDType -> <empty>','readIDType',0,'p_readIDType','parser.py',323),
  ('verifyRows -> <empty>','verifyRows',0,'p_verifyRows','parser.py',326),
  ('dimMatrix -> LEFTBRACK hyperExpression verifyCols RIGHTBRACK','dimMatrix',4,'p_dimMatrix','parser.py',329),
  ('dimMatrix -> checkMatAsArray','dimMatrix',1,'p_dimMatrix','parser.py',330),
  ('verifyCols -> <empty>','verifyCols',0,'p_verifyCols','parser.py',333),
  ('checkMatAsArray -> <empty>','checkMatAsArray',0,'p_checkMatAsArray','parser.py',336),
]
